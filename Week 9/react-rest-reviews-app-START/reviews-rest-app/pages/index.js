import { useState } from 'react'

import Head from 'next/head'
import Image from 'next/image'

import Navbar from '../components/Navbar';
import AdaptationReviewCard from '../components/AdaptationReviewCard';

import Box from '@mui/material/Box';
import Button from '@mui/material/Button';

import CardMedia from '@mui/material/CardMedia';

import Container from '@mui/material/Container';

import InputLabel from '@mui/material/InputLabel';
import Grid from '@mui/material/Grid';
import FormControl from '@mui/material/FormControl';
import FormLabel from '@mui/material/FormLabel';
import FormControlLabel from '@mui/material/FormControlLabel';

import Radio from '@mui/material/Radio';
import RadioGroup from '@mui/material/RadioGroup';


import TextField from '@mui/material/TextField';

import AdaptationReviewwCard from '../components/AdaptationReviewCard';

export default function Home() {
  const [reviews, setReviews] = useState([])
  const [title, setTitle] = useState("")
  const [rating, setRating] = useState("")
  const [comment, setComment] = useState("")
  const MOCK_ADAPTATION_RATING = [{
    'title': 'Fight Club',
    'comment': 'Great movie and book',
    'rating': 10
  }]

  const handleSubmit = async (event) =>
  {
    event.preventDefault();
    //let's make the post request
    const response = await fetch('http://localhost:5000/reviews' , {
      method: "POST", //tell the server what request we're making
      headers:  {//tell the server what type of data we're sending
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ // this is information to be sent.
        title: title,
        comment: comment,
        rating: parseInt(rating)
      })
    })
    const data = await response.json()

    const newReviews=[...reviews, data]
    setReviews(newReviews)

    setTitle("")
    setComment("")
    setRating("")
  }

  const loadAllCurrentReviews = async () => {
    const response = await fetch('http://localhost:5000/reviews', {
      method: "GET"
    });
    const data = await response.json();
    setReviews(data)
  }

  return (
    <div>
      <Head>
        <title>Adaptation Reviews.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar title={"Adaptation Reviews App"}/>
      <main>
        <Container maxWidth="md">
          <form>
            <Grid container spacing={3}>
              <Grid item xs={12} sm={12}>
                <TextField
                  id="title"
                  name="title"
                  label="Adaptation Title"
                  fullWidth
                  variant="standard"
                  onChange={(event)=> {
                    setTitle(event.target.value)
                  }}
                  value={title}
                />
              </Grid>
              <Grid item xs={12} sm={12}>
                <TextField
                  id="review-comments"
                  name="review-comments"
                  label="Comments"
                  fullWidth
                  variant="standard"
                  onChange={(event)=> {
                    setComment(event.target.value)
                  }}
                  value={comment}
                />
              </Grid>
              <Grid item xs={12} sm={12}>
                <FormControl>
                  <FormLabel id="adaptation-rating">Rating</FormLabel>
                  <RadioGroup
                    row
                    aria-labelledby="adaptation-rating"
                    name="rating-buttons-group"
                    value={rating}
                    onChange={(event) => {
                      setRating(event.target.value)
                    }}
                  >
                    <FormControlLabel value={1} control={<Radio />} label="1" />
                    <FormControlLabel value={2} control={<Radio />} label="2" />
                    <FormControlLabel value={3} control={<Radio />} label="3" />
                    <FormControlLabel value={4} control={<Radio />} label="4" />
                    <FormControlLabel value={5} control={<Radio />} label="5" />
                    <FormControlLabel value={6} control={<Radio />} label="6" />
                    <FormControlLabel value={7} control={<Radio />} label="7" />
                    <FormControlLabel value={8} control={<Radio />} label="8" />
                    <FormControlLabel value={9} control={<Radio />} label="9" />
                    <FormControlLabel value={10} control={<Radio />} label="10" />
                  </RadioGroup>
               </FormControl>
              </Grid>
              <Grid item xs={12} sm={12}>
                <Button
                  variant="contained"
                  type="submit"
                  onSubmit={handleSubmit}
                >
                  Add New Review
                </Button>
              </Grid>
            </Grid>
          </form>
          <Box
            sx={{
              pt: 2,
              pb: 2,
            }}
          >
            <Button
              onClick={loadAllCurrentReviews}
              variant="contained"
            >
              Load All Current Reviews
            </Button>
          </Box>
          {reviews.map((adaptation, index)=> {
            return <AdaptationReviewwCard
              key={index}
              title={adaptation.title}
              rating={adaptation.rating}
              comment={adaptation.comment}
            />
          })}

        </Container>
      </main>
    </div>
  )
}
